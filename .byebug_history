c
@similar_tags
c
photo
phot
c
similar_tag.photos.each
similar_tag.photos
similar_tag
c
similar_tag.photos
similar_tag.photo
similar_tag
c
similar_tags.length
similar_tags
similar_tags[:adjective][:syn]
c
Tag.joins(:taggings).joins(:photos).where(tag_name: @similar_tags).length
Photo.where(tag: similarTags).length
Photo.where(tag: similarTags)
Tag.joins(:taggings).joins(:photos).where(tag_name: similarTags).length
Tag.joins(:taggings).joins(:photos).where(tag_name: similarTags)
Tag.joins(:taggings).joins(:photos).where(tag_name: similar_tags)
Tag.joins(:taggings).joins(:photos)
Tag.joins(:taggings)
Tag
Tagging.joins(:photo).joins(:tag).where(tag_name: similarTags).length
Tagging.joins(:photo).joins(:tags).where(tag_name: similarTags).length
Tagging.joins(:photos).joins(:tags).where(tag_name: similarTags).length
Tagging.joins(:photos).joins(:tags).where(tag_name: similarTags)
Tagging.joins(:photos).joins(:tags)
Tagging.joins(:photos)
Tagging.join(:photos)
Tagging
Tagging.joins(:photos).where(tag_name: similarTags).length
Taggings.joins(:photos).where(tag_name: similarTags).length
Tagging.joins(:photos).where(tag_name: similarTags).length
Photo.joins(:taggings).where(tag_name: similarTags).length
Photo.joins(:taggings).where(tag: similarTags).length
Photo.joins(:taggings).where(tag: similarTags)
Photo.join(Tagging).where(tag: similarTags)
Photo.join(taggings).where(tag: similarTags)
Photo.where(tag: similarTags)
Photo.where(tag: similarTags).length
Photo.where(tag: similarTags)
Photos.where(tag: similarTags)
similarTags
similarTags = adjectives.concat(nouns).concat(verbs)
similarTags = adjectives.concat(nouns, verbs)
verbs = similarTags[:verb][:syn]
nouns = similarTags[:noun][:syn]
adjectives = similarTags["adjective"]["syn"]
similarTags[:noun][:syn]
similarTags[:adjective][:syn]
similarTags["adjective"]["syn"]
similarTags["adjective"]
similarTags
c
similarTags
c
similarTags
c
params[:photo][:tag_name]
c
params[:photo][:tag_name]
params[:photo]
params[:id]
params
c
params[:id]
params[:photo_id]
params
c
@photo.tags.each { |tag| print tag }
@photo.tags.each do |tag|
@photo.tags do |tag|
@photo.tags
@photo
c
params[:photo][:tag_name]
c
params[:photo][:tag_name]
params[:photo]
params
c
params
params[:photo_id]
params[:album_id]
c
params([:album_id])
params[:album_id]
params
c
@photos.object_id
c
@photos.object_id
c
photo.user
c
x
up
upu
up
c
photos
photo
phot
n
s
photoss
photos
c
@photos[0].user
@photos.user
c
n
s
n
m
n
@user.photos
c
@user.photos
c
@user.photos
c
time_ago_in_words(photo.created_at)
time_ago_in_words(Time.now)
c
current_user.id
following_params[:followed_id]
folowing_params[:followed_id]
c
@users
c
@users
q
User.where("users.id != 9")
current_user
@users
c
@users
q
params[:username]
params[username]
params
q
Following.find(@following.id)
@following
c
test.valid?
test = Following.new({follower_id: 1, followed_id: following_params[:followed_id]})
Following.new({follower_id: 1, followed_id: following_params[:followed_id]})
Following.new({follower_id: 1, followed_id: following_params[followed_id]})
Following.new({follower_id: 1, following_params})
Following.new({follower_id: 1}, following_params)
following_params
following_params["follower_id"] = 1
following_params
following_params[:follower_id] = 1
following_params[:followed_id].to_i
following_params[:followed_id]
following_params[followed_id]
following_params.followed_id
following_params
c
following_params
c
logged_in?
c
n
current_user
logged_in?
n
session[:session_token]
c
n
c
@user.valid?
n
c
n
b
c
User.new(user_params)
user_params
c
n
c
n
User.valid?
user_params
